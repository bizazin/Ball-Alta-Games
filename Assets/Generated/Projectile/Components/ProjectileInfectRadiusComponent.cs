//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ProjectileContext {

    public ProjectileEntity infectRadiusEntity { get { return GetGroup(ProjectileMatcher.InfectRadius).GetSingleEntity(); } }
    public Scripts.Ecs.Projectile.Components.InfectRadiusComponent infectRadius { get { return infectRadiusEntity.infectRadius; } }
    public bool hasInfectRadius { get { return infectRadiusEntity != null; } }

    public ProjectileEntity SetInfectRadius(float newValue) {
        if (hasInfectRadius) {
            throw new Entitas.EntitasException("Could not set InfectRadius!\n" + this + " already has an entity with Scripts.Ecs.Projectile.Components.InfectRadiusComponent!",
                "You should check if the context already has a infectRadiusEntity before setting it or use context.ReplaceInfectRadius().");
        }
        var entity = CreateEntity();
        entity.AddInfectRadius(newValue);
        return entity;
    }

    public void ReplaceInfectRadius(float newValue) {
        var entity = infectRadiusEntity;
        if (entity == null) {
            entity = SetInfectRadius(newValue);
        } else {
            entity.ReplaceInfectRadius(newValue);
        }
    }

    public void RemoveInfectRadius() {
        infectRadiusEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ProjectileEntity {

    public Scripts.Ecs.Projectile.Components.InfectRadiusComponent infectRadius { get { return (Scripts.Ecs.Projectile.Components.InfectRadiusComponent)GetComponent(ProjectileComponentsLookup.InfectRadius); } }
    public bool hasInfectRadius { get { return HasComponent(ProjectileComponentsLookup.InfectRadius); } }

    public void AddInfectRadius(float newValue) {
        var index = ProjectileComponentsLookup.InfectRadius;
        var component = (Scripts.Ecs.Projectile.Components.InfectRadiusComponent)CreateComponent(index, typeof(Scripts.Ecs.Projectile.Components.InfectRadiusComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInfectRadius(float newValue) {
        var index = ProjectileComponentsLookup.InfectRadius;
        var component = (Scripts.Ecs.Projectile.Components.InfectRadiusComponent)CreateComponent(index, typeof(Scripts.Ecs.Projectile.Components.InfectRadiusComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInfectRadius() {
        RemoveComponent(ProjectileComponentsLookup.InfectRadius);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ProjectileMatcher {

    static Entitas.IMatcher<ProjectileEntity> _matcherInfectRadius;

    public static Entitas.IMatcher<ProjectileEntity> InfectRadius {
        get {
            if (_matcherInfectRadius == null) {
                var matcher = (Entitas.Matcher<ProjectileEntity>)Entitas.Matcher<ProjectileEntity>.AllOf(ProjectileComponentsLookup.InfectRadius);
                matcher.componentNames = ProjectileComponentsLookup.componentNames;
                _matcherInfectRadius = matcher;
            }

            return _matcherInfectRadius;
        }
    }
}
